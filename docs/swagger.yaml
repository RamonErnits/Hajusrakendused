openapi: 3.0.2
info:
    title: CarAds-API
    version: 1.0.0
    description: This is a Swagger UI for our Cars ads API
paths:
    /cars:
        get:
            tags:
                - List
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/CarDetails'
                        text/xml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/CarDetails'
                    description: all good
            description: |
                Returns a list of different cars
        post:
            requestBody: {}
            tags:
                - Post
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/CarDetails'
                    description: |+
                        Post car ads

            summary: Car ad post
            description: Post Your Car Ad
    /cars/posts:
        get:
            tags:
                - Sellers
                - locations
                - owners
                - price
                - brand
                - model
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CarDetails'
            summary: Get details of car posts
            description: Get car post
    '/cars/{id}':
        get:
            tags:
                - details
                - Sellers
                - locations
                - owners
                - price
                - brand
                - model
                - id
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of given car ads:
                                    value: "    {id: 1, make: 'Ford', model: 'Fusion Hybrid', year: 2019},\r\n    {id: 2, make: 'Tesla', model: 'Model S', year: 2019},\r\n    {id: 3, make: 'Toyota', model: 'Prius', year: 2019}"
                    description: |
                        description
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Car \\w+ was not found:
                                    value: Car \\w+ was not found in car array
                    description: description
            summary: Get full details of car ads
            description: |
                Returns full details of a given id car
        put:
            tags:
                - Sellers
                - locations
                - owners
                - price
                - brand
                - model
                - id
            description: |
                Update carslist
        delete:
            tags:
                - Delete
                - Sellers
                - locations
                - owners
                - price
                - brand
                - model
                - id
            summary: Find cars by id
            description: Delete cars by id
        parameters:
            -
                name: id
                description: ''
                schema:
                    type: integer
                in: path
                required: true
components:
    schemas:
        CarDetails:
            title: Root Type for CarDetails
            description: ''
            type: object
            properties:
                car:
                    type: string
                Price:
                    type: string
                Seller:
                    type: string
                Owner:
                    type: string
                Location:
                    type: string
            example:
                car: audi
                Price: '123'
                Seller: Ramon Ernits
                Owner: Ernits Ramon
                Location: Tallinn
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error Message.
